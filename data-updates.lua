---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 10/29/2024 2:29 AM
---
require("__erm_zerg__/global")

require "prototypes.update-teamcolour"
local MapGenFunctions = require('__erm_libs__/prototypes/map_gen')

-- Update RTS world
local mapgen = data.raw["map-gen-presets"]["default"]
mapgen["erm-rts-death-world"]["basic_settings"]["autoplace_controls"][AUTOCONTROL_NAME] = { frequency = "very-high", size = "very-big" }

if mapgen["death-world"] then
    mapgen["death-world"]["basic_settings"]["autoplace_controls"][AUTOCONTROL_NAME] = { frequency = "very-high", size = "very-big" }
end

if mapgen["erm-debug"] then
    mapgen["erm-debug"]["basic_settings"]["autoplace_controls"][AUTOCONTROL_NAME] = { frequency = 5, size = 5 }
end

local nauvis_planet = data.raw.planet.nauvis
local map_gen_settings = nauvis_planet.map_gen_settings
if map_gen_settings then
    local nauvis_autocontrols = map_gen_settings.autoplace_controls
    local nauvis_enemy_settings = settings.startup["enemyracemanager-nauvis-enemy"].value

    if nauvis_enemy_settings == MOD_NAME then
        MapGenFunctions.remove_enemy_autoplace_controls(nauvis_autocontrols)

        nauvis_autocontrols[AUTOCONTROL_NAME] = {}
        --- Inject itself autocontrol for mixed mode    
    elseif nauvis_enemy_settings == NAUVIS_MIXED then
        nauvis_autocontrols[AUTOCONTROL_NAME] = {}
    end
end


if mods["space-age"] and settings.startup["enemy_erm_zerg-on_vulcanus"].value then
    local vulcanus = data.raw.planet.vulcanus
    vulcanus.map_gen_settings.autoplace_controls[AUTOCONTROL_NAME] = {}
    --- Replace territory bosses with zerg variance.
    vulcanus.map_gen_settings.territory_settings.units = {
        MOD_NAME .. "--small-nydusworm",
        MOD_NAME .. "--medium-nydusworm",
        MOD_NAME .. "--big-nydusworm",
    }
end


if mods["space-age"] then
    require "prototypes.update-demolisher"
    
    --- Bump recipe max pressure to match Char and beyond. 
    for _, recipe in pairs(data.raw.recipe) do
        if recipe.surface_conditions  then
            for _, surface_condition in pairs(recipe.surface_conditions) do
                if surface_condition.property == "pressure" and surface_condition.max == 4000  then
                    surface_condition.max = 4500
                end
            end
        end
    end
end 