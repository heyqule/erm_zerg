---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 10/26/2024 7:20 PM
---

if not feature_flags.space_travel then
    return
end

local effects = require("__core__.lualib.surface-render-parameter-effects")
local planet_catalogue_vulcanus = require("__space-age__.prototypes.planet.procession-catalogue-vulcanus")
local asteroid_triggers = require("__erm_libs__.prototypes.asteroid_triggers")

local char_mapgen = {
    starting_area = 2,
    property_expression_names = {
        elevation = "vulcanus_elevation",
        temperature = "vulcanus_temperature",
        moisture = "vulcanus_moisture",
        aux = "vulcanus_aux",
        cliffiness = "cliffiness_basic",
        cliff_elevation = "cliff_elevation_from_elevation",
        ["entity:coal:probability"] = "vulcanus_coal_probability",
        ["entity:coal:richness"] = "vulcanus_coal_richness",
        ["entity:calcite:probability"] = "vulcanus_calcite_probability",
        ["entity:calcite:richness"] = "vulcanus_calcite_richness",
        ["entity:sulfuric-acid-geyser:probability"] = "vulcanus_sulfuric_acid_geyser_probability",
        ["entity:sulfuric-acid-geyser:richness"] = "vulcanus_sulfuric_acid_geyser_richness",
    },
    cliff_settings = {
        name = "cliff-vulcanus",
        cliff_elevation_interval = 120,
        cliff_elevation_0 = 70
    },
    territory_settings = {
        units = {
            MOD_NAME .. "-medium-demolisher",
            MOD_NAME .. "-big-demolisher",
        },
        territory_index_expression = "demolisher_territory_expression",
        territory_variation_expression = "demolisher_variation_expression",
        minimum_territory_size = 7
    },
    autoplace_controls = {
        ["vulcanus_coal"] = {},
        ["sulfuric_acid_geyser"] = {},
        ["calcite"] = {},
        ["vulcanus_volcanism"] = {},
        [AUTOCONTROL_NAME] = {},
        --["rocks"] = {}, -- can"t add the rocks control otherwise nauvis rocks spawn
    },
    autoplace_settings = {
        ["tile"] = {
            settings = {
                --nauvis tiles
                ["volcanic-soil-dark"] = {},
                ["volcanic-soil-light"] = {},
                ["volcanic-ash-soil"] = {},
                --end of nauvis tiles
                ["volcanic-ash-flats"] = {},
                ["volcanic-ash-light"] = {},
                ["volcanic-ash-dark"] = {},
                ["volcanic-cracks"] = {},
                ["volcanic-cracks-warm"] = {},
                ["volcanic-folds"] = {},
                ["volcanic-folds-flat"] = {},
                ["lava"] = {},
                ["lava-hot"] = {},
                ["volcanic-folds-warm"] = {},
                ["volcanic-pumice-stones"] = {},
                ["volcanic-cracks-hot"] = {},
                ["volcanic-jagged-ground"] = {},
                ["volcanic-smooth-stone"] = {},
                ["volcanic-smooth-stone-warm"] = {},
                ["volcanic-ash-cracks"] = {},
            }
        },
        ["decorative"] = {
            settings = {
                -- nauvis decoratives
                ["v-brown-carpet-grass"] = {},
                ["v-green-hairy-grass"] = {},
                ["v-brown-hairy-grass"] = {},
                ["v-red-pita"] = {},
                -- end of nauvis
                ["vulcanus-rock-decal-large"] = {},
                ["vulcanus-crack-decal-large"] = {},
                ["vulcanus-crack-decal-huge-warm"] = {},
                ["vulcanus-dune-decal"] = {},
                ["vulcanus-sand-decal"] = {},
                ["vulcanus-lava-fire"] = {},
                ["calcite-stain"] = {},
                ["calcite-stain-small"] = {},
                ["sulfur-stain"] = {},
                ["sulfur-stain-small"] = {},
                ["sulfuric-acid-puddle"] = {},
                ["sulfuric-acid-puddle-small"] = {},
                ["crater-small"] = {},
                ["crater-large"] = {},
                ["pumice-relief-decal"] = {},
                ["small-volcanic-rock"] = {},
                ["medium-volcanic-rock"] = {},
                ["tiny-volcanic-rock"] = {},
                ["tiny-rock-cluster"] = {},
                ["small-sulfur-rock"] = {},
                ["tiny-sulfur-rock"] = {},
                ["sulfur-rock-cluster"] = {},
                ["waves-decal"] = {},
            }
        },
        ["entity"] = {
            settings = {
                ["coal"] = {},
                ["calcite"] = {},
                ["sulfuric-acid-geyser"] = {},
                ["tungsten-ore"] = {},
                ["huge-volcanic-rock"] = {},
                ["big-volcanic-rock"] = {},
                ["crater-cliff"] = {},
                ["vulcanus-chimney"] = {},
                ["vulcanus-chimney-faded"] = {},
                ["vulcanus-chimney-cold"] = {},
                ["vulcanus-chimney-short"] = {},
                ["vulcanus-chimney-truncated"] = {},
                ["ashland-lichen-tree"] = {},
                ["ashland-lichen-tree-flaming"] = {},
            }
        }
    }
}

----- Add Large asteroid that spawn units
local oxide_name = "zerg-spawning-medium-oxide-asteroid"
local zerg_spawning_oxide_asteroid = util.table.deepcopy(data.raw['asteroid']['medium-oxide-asteroid'])
zerg_spawning_oxide_asteroid["name"] = oxide_name

local carbonic_name = "zerg-spawning-medium-carbonic-asteroid"
local zerg_spawning_carbonic_asteroid = util.table.deepcopy(data.raw['asteroid']['medium-carbonic-asteroid'])
zerg_spawning_carbonic_asteroid["name"]  = carbonic_name

local metallic_name = "zerg-spawning-medium-metallic-asteroid"
local zerg_spawning_metallic_asteroid = util.table.deepcopy(data.raw['asteroid']['medium-metallic-asteroid'])
zerg_spawning_metallic_asteroid["name"]  = metallic_name

local new_asteroids = {
    [oxide_name] = zerg_spawning_metallic_asteroid,
    [carbonic_name] = zerg_spawning_carbonic_asteroid,
    [metallic_name] = zerg_spawning_oxide_asteroid,
}

local astreroid_data = {
    [metallic_name] = {
        scourge = { [4] = 0.35},
        mutalisk = { [4] = 0.25, [5] = 0.1},
        devourer = { [4] = 0.15, [5] = 0.05},
    },
    [carbonic_name] = {
        scourge = { [4] = 0.35},
        mutalisk = { [4] = 0.25, [5] = 0.1},
        overlord = { [4] = 0.1},
    },
    [oxide_name] = {
        scourge = { [4] = 0.35},
        guardian = { [4] = 0.1, [5] = 0.02},
        devourer = { [4] = 0.15, [5] = 0.05},
    }
}
for key, a_data in pairs(astreroid_data) do
    for unit_name, spawn_data in pairs(a_data) do
        for tier, chance in pairs(spawn_data) do
            asteroid_triggers.add_unit_to_asteroid(new_asteroids[key], MOD_NAME, unit_name, tier, chance)
        end
    end
end

data:extend({
    --- Asteroid that spawn units
    zerg_spawning_oxide_asteroid,
    zerg_spawning_carbonic_asteroid,
    zerg_spawning_metallic_asteroid,
})

local char_space_connection_asteroid_spawn_definition = {
    {
        asteroid = "metallic-asteroid-chunk",
        spawn_points = {
            {
                angle_when_stopped = 1,
                distance = 0.1,
                probability = 0.0125,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 1,
                distance = 0.9,
                probability = 0.0025,
                speed = 0.016666666666666665
            }
        },
        type = "asteroid-chunk"
    },
    {
        asteroid = "carbonic-asteroid-chunk",
        spawn_points = {
            {
                angle_when_stopped = 1,
                distance = 0.1,
                probability = 0.0083333333333333321,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 1,
                distance = 0.9,
                probability = 0.001875,
                speed = 0.016666666666666665
            }
        },
        type = "asteroid-chunk"
    },
    {
        asteroid = "oxide-asteroid-chunk",
        spawn_points = {
            {
                angle_when_stopped = 1,
                distance = 0.1,
                probability = 0.0041666666666666661,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 1,
                distance = 0.9,
                probability = 0.000625,
                speed = 0.016666666666666665
            }
        },
        type = "asteroid-chunk"
    },
    {
        asteroid = metallic_name,
        spawn_points = {
            {
                angle_when_stopped = 0.6,
                distance = 0.1,
                probability = 0,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.5,
                probability = 0.0075,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.9,
                probability = 0.0025,
                speed = 0.016666666666666665
            }
        }
    },
    {
        asteroid = carbonic_name,
        spawn_points = {
            {
                angle_when_stopped = 0.6,
                distance = 0.1,
                probability = 0,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.5,
                probability = 0.0053124999999999991,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.9,
                probability = 0.001875,
                speed = 0.016666666666666665
            }
        }
    },
    {
        asteroid = oxide_name,
        spawn_points = {
            {
                angle_when_stopped = 0.6,
                distance = 0.1,
                probability = 0,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.5,
                probability = 0.0021875,
                speed = 0.016666666666666665
            },
            {
                angle_when_stopped = 0.6,
                distance = 0.9,
                probability = 0.000625,
                speed = 0.016666666666666665
            }
        }
    }
}

local char_space_asteroid_spawn_definition = {
    {
        asteroid = "metallic-asteroid-chunk",
        angle_when_stopped = 1,
        probability = 0.0025,
        speed = 0.016666666666666665,
        type = "asteroid-chunk"
    },
    {
        asteroid = "carbonic-asteroid-chunk",
        angle_when_stopped = 1,
        probability = 0.001875,
        speed = 0.016666666666666665,
        type = "asteroid-chunk"
    },
    {
        asteroid = "oxide-asteroid-chunk",
        angle_when_stopped = 1,
        probability = 0.000625,
        speed = 0.016666666666666665,
        type = "asteroid-chunk"
    },
    {
        asteroid = metallic_name,
        angle_when_stopped = 0.6,
        probability = 0.0025,
        speed = 0.016666666666666665,
    },
    {
        asteroid = carbonic_name,
        angle_when_stopped = 0.6,
        probability = 0.001875,
        speed = 0.016666666666666665
    },
    {
        asteroid = oxide_name,
        angle_when_stopped = 0.6,
        probability = 0.000625,
        speed = 0.016666666666666665
    }
}

data:extend({
    --- Planet
    {
        type = "planet",
        name = "char",
        icon = "__space-age__/graphics/icons/vulcanus.png",
        starmap_icon = "__space-age__/graphics/icons/starmap-planet-vulcanus.png",
        starmap_icon_size = 512,
        gravity_pull = 10,
        distance = 12.5,
        orientation = 0.9,
        magnitude = 1,
        order = "b[char]",
        subgroup = "planets",
        map_seed_offset = 100010,
        map_gen_settings = char_mapgen,
        pollutant_type = nil,
        solar_power_in_space = 500,
        platform_procession_set = {
            arrival = { "planet-to-platform-b" },
            departure = { "platform-to-planet-a" }
        },
        planet_procession_set = {
            arrival = { "platform-to-planet-b" },
            departure = { "planet-to-platform-a" }
        },
        procession_graphic_catalogue = planet_catalogue_vulcanus,
        surface_properties = {
            ["day-night-cycle"] = 5 * minute,
            ["magnetic-field"] = 25,
            ["solar-power"] = 400,
            pressure = 4000,
            gravity = 40
        },
        asteroid_spawn_influence = 1,
        asteroid_spawn_definitions = char_space_asteroid_spawn_definition,
        persistent_ambient_sounds = {
            base_ambience = { filename = "__space-age__/sound/wind/base-wind-vulcanus.ogg", volume = 0.8 },
            wind = { filename = "__space-age__/sound/wind/wind-vulcanus.ogg", volume = 0.8 },
            crossfade = {
                order = { "wind", "base_ambience" },
                curve_type = "cosine",
                from = { control = 0.35, volume_percentage = 0.0 },
                to = { control = 2, volume_percentage = 100.0 }
            },
            semi_persistent = {
                {
                    sound = { variations = sound_variations("__space-age__/sound/world/semi-persistent/distant-rumble", 3, 0.5) },
                    delay_mean_seconds = 10,
                    delay_variance_seconds = 5
                },
                {
                    sound = { variations = sound_variations("__space-age__/sound/world/semi-persistent/distant-flames", 5, 0.6) },
                    delay_mean_seconds = 15,
                    delay_variance_seconds = 7.0
                }
            }
        },
        surface_render_parameters = {
            fog = effects.default_fog_effect_properties(),
            -- clouds = effects.default_clouds_effect_properties(),

            -- Should be based on the default day/night times, ie
            -- sun starts to set at 0.25
            -- sun fully set at 0.45
            -- sun starts to rise at 0.55
            -- sun fully risen at 0.75
            day_night_cycle_color_lookup = {
                { 0.0, "__space-age__/graphics/lut/vulcanus-1-day.png" },
                { 0.20, "__space-age__/graphics/lut/vulcanus-1-day.png" },
                { 0.45, "__space-age__/graphics/lut/vulcanus-2-night.png" },
                { 0.55, "__space-age__/graphics/lut/vulcanus-2-night.png" },
                { 0.80, "__space-age__/graphics/lut/vulcanus-1-day.png" },
            },

            terrain_tint_effect = {
                noise_texture = {
                    filename = "__space-age__/graphics/terrain/vulcanus/tint-noise.png",
                    size = 4096
                },

                offset = { 0.2, 0, 0.4, 0.8 },
                intensity = { 0.5, 0.2, 0.3, 1.0 },
                scale_u = { 3, 1, 1, 1 },
                scale_v = { 1, 1, 1, 1 },

                global_intensity = 0.3,
                global_scale = 0.1,
                zoom_factor = 3,
                zoom_intensity = 0.6
            }
        }
    },
    --- space connection
    {
        type = "space-connection",
        name = "nauvis-char",
        subgroup = "planet-connections",
        from = "nauvis",
        to = "char",
        order = "nauvis-char",
        length = 22500,
        asteroid_spawn_definitions = char_space_connection_asteroid_spawn_definition
    },
    {
        type = "space-connection",
        name = "vulcanus-char",
        subgroup = "planet-connections",
        from = "vulcanus",
        to = "char",
        order = "vulcanus-char",
        length = 15000,
        asteroid_spawn_definitions = char_space_connection_asteroid_spawn_definition
    },
    --- unlock tech
    {
        type = "technology",
        name = "planet-discovery-char",
        icons = util.technology_icon_constant_planet("__space-age__/graphics/technology/vulcanus.png"),
        icon_size = 256,
        essential = false,
        effects = {
            {
                type = "unlock-space-location",
                space_location = "char",
                use_icon_overlay_constant = true
            },
        },
        prerequisites = { "space-platform-thruster", "landfill" },
        unit = {
            count = 1000,
            ingredients = {
                { "automation-science-pack", 1 },
                { "logistic-science-pack", 1 },
                { "chemical-science-pack", 1 },
                { "space-science-pack", 1 }
            },
            time = 60
        }
    },
})
